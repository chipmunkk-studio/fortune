
// This file is generated by the Snaplet CLI
export type JsonPrimitive = null | number | string | boolean

export type NestedArray<V> = Array<V | NestedArray<V>>

export type Nested<V> = V | { [s: string]: V | Nested<V> } | Array<V | Nested<V>>

export type Json = Nested<JsonPrimitive>

export type Structure = {
  $schemas: ["public", "supabase_migrations", "supabase_functions", "extensions", "net", "vault", "pgsodium_masks", "pgsodium", "graphql", "graphql_public", "realtime", "auth", "storage"],
  "public": {
  $tables: ["alarm_feed_type", "alarm_feeds", "alarm_reward_history", "alarm_reward_info", "alarm_reward_type", "ingredient_image", "ingredient_type", "ingredients", "markers", "mission_clear_conditions", "mission_clear_user", "mission_reward", "mission_reward_type", "mission_type", "missions", "obtain_histories", "push_alarm", "terms", "users"],
  "alarm_feed_type": {
  $columns: ["type", "description"],
  "type": {
  default: "'push'::text",
  nullable: false,
  type: "text",
},
"description": {
  default: "''::text",
  nullable: true,
  type: "text",
},
},
"alarm_feeds": {
  $columns: ["created_at", "headings", "content", "id", "users", "type", "is_read", "alarm_reward_history"],
  "created_at": {
  default: "now()",
  nullable: false,
  type: "timestamptz",
},
"headings": {
  default: "''::text",
  nullable: false,
  type: "text",
},
"content": {
  default: "''::text",
  nullable: false,
  type: "text",
},
"id": {
  default: null,
  nullable: false,
  type: "int8",
},
"users": {
  default: null,
  nullable: true,
  type: "int8",
},
"type": {
  default: null,
  nullable: false,
  type: "text",
},
"is_read": {
  default: "false",
  nullable: false,
  type: "bool",
},
"alarm_reward_history": {
  default: null,
  nullable: true,
  type: "int8",
},
},
"alarm_reward_history": {
  $columns: ["id", "alarm_reward_info", "created_at", "users", "is_receive", "ingredients"],
  "id": {
  default: null,
  nullable: false,
  type: "int8",
},
"alarm_reward_info": {
  default: null,
  nullable: false,
  type: "int8",
},
"created_at": {
  default: "now()",
  nullable: true,
  type: "timestamptz",
},
"users": {
  default: null,
  nullable: false,
  type: "int8",
},
"is_receive": {
  default: "false",
  nullable: false,
  type: "bool",
},
"ingredients": {
  default: null,
  nullable: false,
  type: "int8",
},
},
"alarm_reward_info": {
  $columns: ["id", "type", "has_unique_marker"],
  "id": {
  default: null,
  nullable: false,
  type: "int8",
},
"type": {
  default: null,
  nullable: false,
  type: "text",
},
"has_unique_marker": {
  default: "false",
  nullable: false,
  type: "bool",
},
},
"alarm_reward_type": {
  $columns: ["name", "description"],
  "name": {
  default: "''::text",
  nullable: false,
  type: "text",
},
"description": {
  default: "''::text",
  nullable: false,
  type: "text",
},
},
"ingredient_image": {
  $columns: ["image_url", "name"],
  "image_url": {
  default: null,
  nullable: false,
  type: "text",
},
"name": {
  default: null,
  nullable: false,
  type: "text",
},
},
"ingredient_type": {
  $columns: ["name", "description"],
  "name": {
  default: "'normal'::text",
  nullable: false,
  type: "text",
},
"description": {
  default: null,
  nullable: true,
  type: "text",
},
},
"ingredients": {
  $columns: ["id", "name", "reward_ticket", "distance", "type", "image_url"],
  "id": {
  default: null,
  nullable: false,
  type: "int8",
},
"name": {
  default: null,
  nullable: false,
  type: "text",
},
"reward_ticket": {
  default: "'0'::bigint",
  nullable: false,
  type: "int8",
},
"distance": {
  default: "'200'::bigint",
  nullable: false,
  type: "int8",
},
"type": {
  default: "'normal'::text",
  nullable: false,
  type: "text",
},
"image_url": {
  default: null,
  nullable: true,
  type: "text",
},
},
"markers": {
  $columns: ["id", "ingredients", "longitude", "last_obtain_user", "latitude", "hit_count", "is_reward"],
  "id": {
  default: null,
  nullable: false,
  type: "int8",
},
"ingredients": {
  default: null,
  nullable: true,
  type: "int8",
},
"longitude": {
  default: null,
  nullable: false,
  type: "float8",
},
"last_obtain_user": {
  default: null,
  nullable: true,
  type: "int8",
},
"latitude": {
  default: null,
  nullable: false,
  type: "float8",
},
"hit_count": {
  default: "'0'::bigint",
  nullable: false,
  type: "int8",
},
"is_reward": {
  default: "false",
  nullable: false,
  type: "bool",
},
},
"mission_clear_conditions": {
  $columns: ["id", "missions", "require_count", "ingredients", "markers"],
  "id": {
  default: null,
  nullable: false,
  type: "int8",
},
"missions": {
  default: null,
  nullable: false,
  type: "int8",
},
"require_count": {
  default: "'0'::bigint",
  nullable: false,
  type: "int8",
},
"ingredients": {
  default: null,
  nullable: true,
  type: "int8",
},
"markers": {
  default: null,
  nullable: true,
  type: "int8",
},
},
"mission_clear_user": {
  $columns: ["id", "created_at", "missions", "users", "is_receive"],
  "id": {
  default: null,
  nullable: false,
  type: "int8",
},
"created_at": {
  default: "now()",
  nullable: false,
  type: "timestamptz",
},
"missions": {
  default: null,
  nullable: false,
  type: "int8",
},
"users": {
  default: null,
  nullable: false,
  type: "int8",
},
"is_receive": {
  default: "false",
  nullable: false,
  type: "bool",
},
},
"mission_reward": {
  $columns: ["id", "total_count", "remain_count", "reward_image", "created_at", "reward_name"],
  "id": {
  default: null,
  nullable: false,
  type: "int8",
},
"total_count": {
  default: "'0'::bigint",
  nullable: false,
  type: "int8",
},
"remain_count": {
  default: "'0'::bigint",
  nullable: false,
  type: "int8",
},
"reward_image": {
  default: "'https://via.placeholder.com/1x1.png?text=+&bg=ffffff00'::text",
  nullable: true,
  type: "text",
},
"created_at": {
  default: "now()",
  nullable: true,
  type: "timestamptz",
},
"reward_name": {
  default: "''::text",
  nullable: true,
  type: "text",
},
},
"mission_reward_type": {
  $columns: ["name", "description"],
  "name": {
  default: null,
  nullable: false,
  type: "text",
},
"description": {
  default: "''::text",
  nullable: false,
  type: "text",
},
},
"mission_type": {
  $columns: ["name", "description"],
  "name": {
  default: "'normal'::text",
  nullable: false,
  type: "text",
},
"description": {
  default: null,
  nullable: true,
  type: "text",
},
},
"missions": {
  $columns: ["id", "title", "content", "is_active", "mission_type", "mission_reward"],
  "id": {
  default: null,
  nullable: false,
  type: "int8",
},
"title": {
  default: "''::text",
  nullable: false,
  type: "text",
},
"content": {
  default: "''::text",
  nullable: false,
  type: "text",
},
"is_active": {
  default: "false",
  nullable: false,
  type: "bool",
},
"mission_type": {
  default: null,
  nullable: false,
  type: "text",
},
"mission_reward": {
  default: null,
  nullable: true,
  type: "int8",
},
},
"obtain_histories": {
  $columns: ["id", "created_at", "location_name", "ingredient", "user", "marker_id", "ingredient_name", "nickname", "is_reward"],
  "id": {
  default: null,
  nullable: false,
  type: "int8",
},
"created_at": {
  default: "(now() AT TIME ZONE 'utc'::text)",
  nullable: false,
  type: "timestamptz",
},
"location_name": {
  default: null,
  nullable: true,
  type: "text",
},
"ingredient": {
  default: null,
  nullable: false,
  type: "int8",
},
"user": {
  default: null,
  nullable: false,
  type: "int8",
},
"marker_id": {
  default: null,
  nullable: true,
  type: "text",
},
"ingredient_name": {
  default: "''::text",
  nullable: false,
  type: "text",
},
"nickname": {
  default: "''::text",
  nullable: false,
  type: "text",
},
"is_reward": {
  default: "false",
  nullable: false,
  type: "bool",
},
},
"push_alarm": {
  $columns: ["created_at", "headings", "content", "id", "landing_route", "search_text"],
  "created_at": {
  default: "now()",
  nullable: false,
  type: "timestamptz",
},
"headings": {
  default: "''::text",
  nullable: false,
  type: "text",
},
"content": {
  default: "''::text",
  nullable: false,
  type: "text",
},
"id": {
  default: null,
  nullable: false,
  type: "int8",
},
"landing_route": {
  default: "'alarmFeed'::text",
  nullable: true,
  type: "text",
},
"search_text": {
  default: "''::text",
  nullable: true,
  type: "text",
},
},
"terms": {
  $columns: ["id", "index", "is_require", "title", "content"],
  "id": {
  default: null,
  nullable: false,
  type: "int8",
},
"index": {
  default: null,
  nullable: false,
  type: "int8",
},
"is_require": {
  default: "true",
  nullable: false,
  type: "bool",
},
"title": {
  default: null,
  nullable: true,
  type: "text",
},
"content": {
  default: null,
  nullable: true,
  type: "text",
},
},
"users": {
  $columns: ["id", "phone", "nickname", "ticket", "profileImage", "marker_obtain_count", "level"],
  "id": {
  default: null,
  nullable: false,
  type: "int8",
},
"phone": {
  default: null,
  nullable: false,
  type: "text",
},
"nickname": {
  default: null,
  nullable: false,
  type: "text",
},
"ticket": {
  default: "'0'::bigint",
  nullable: false,
  type: "int8",
},
"profileImage": {
  default: "''::text",
  nullable: true,
  type: "text",
},
"marker_obtain_count": {
  default: "'0'::bigint",
  nullable: false,
  type: "int8",
},
"level": {
  default: "'1'::bigint",
  nullable: false,
  type: "int8",
},
},
},
"supabase_migrations": {
  $tables: ["schema_migrations"],
  "schema_migrations": {
  $columns: ["version", "statements", "name"],
  "version": {
  default: null,
  nullable: false,
  type: "text",
},
"statements": {
  default: null,
  nullable: true,
  type: "_text",
},
"name": {
  default: null,
  nullable: true,
  type: "text",
},
},
},
"supabase_functions": {
  $tables: ["hooks", "migrations"],
  "hooks": {
  $columns: ["id", "hook_table_id", "hook_name", "created_at", "request_id"],
  "id": {
  default: "nextval('supabase_functions.hooks_id_seq'::regclass)",
  nullable: false,
  type: "int8",
},
"hook_table_id": {
  default: null,
  nullable: false,
  type: "int4",
},
"hook_name": {
  default: null,
  nullable: false,
  type: "text",
},
"created_at": {
  default: "now()",
  nullable: false,
  type: "timestamptz",
},
"request_id": {
  default: null,
  nullable: true,
  type: "int8",
},
},
"migrations": {
  $columns: ["version", "inserted_at"],
  "version": {
  default: null,
  nullable: false,
  type: "text",
},
"inserted_at": {
  default: "now()",
  nullable: false,
  type: "timestamptz",
},
},
},
"extensions": {
  $tables: ["wrappers_fdw_stats"],
  "wrappers_fdw_stats": {
  $columns: ["fdw_name", "create_times", "rows_in", "rows_out", "bytes_in", "bytes_out", "metadata", "created_at", "updated_at"],
  "fdw_name": {
  default: null,
  nullable: false,
  type: "text",
},
"create_times": {
  default: null,
  nullable: true,
  type: "int8",
},
"rows_in": {
  default: null,
  nullable: true,
  type: "int8",
},
"rows_out": {
  default: null,
  nullable: true,
  type: "int8",
},
"bytes_in": {
  default: null,
  nullable: true,
  type: "int8",
},
"bytes_out": {
  default: null,
  nullable: true,
  type: "int8",
},
"metadata": {
  default: null,
  nullable: true,
  type: "jsonb",
},
"created_at": {
  default: "timezone('utc'::text, now())",
  nullable: false,
  type: "timestamptz",
},
"updated_at": {
  default: "timezone('utc'::text, now())",
  nullable: false,
  type: "timestamptz",
},
},
},
"net": {
  $tables: ["_http_response", "http_request_queue"],
  "_http_response": {
  $columns: ["id", "status_code", "content_type", "headers", "content", "timed_out", "error_msg", "created"],
  "id": {
  default: null,
  nullable: true,
  type: "int8",
},
"status_code": {
  default: null,
  nullable: true,
  type: "int4",
},
"content_type": {
  default: null,
  nullable: true,
  type: "text",
},
"headers": {
  default: null,
  nullable: true,
  type: "jsonb",
},
"content": {
  default: null,
  nullable: true,
  type: "text",
},
"timed_out": {
  default: null,
  nullable: true,
  type: "bool",
},
"error_msg": {
  default: null,
  nullable: true,
  type: "text",
},
"created": {
  default: "now()",
  nullable: false,
  type: "timestamptz",
},
},
"http_request_queue": {
  $columns: ["id", "method", "url", "headers", "body", "timeout_milliseconds"],
  "id": {
  default: "nextval('net.http_request_queue_id_seq'::regclass)",
  nullable: false,
  type: "int8",
},
"method": {
  default: null,
  nullable: false,
  type: "text",
},
"url": {
  default: null,
  nullable: false,
  type: "text",
},
"headers": {
  default: null,
  nullable: false,
  type: "jsonb",
},
"body": {
  default: null,
  nullable: true,
  type: "bytea",
},
"timeout_milliseconds": {
  default: null,
  nullable: false,
  type: "int4",
},
},
},
"vault": {
  $tables: ["secrets"],
  "secrets": {
  $columns: ["id", "name", "description", "secret", "key_id", "nonce", "created_at", "updated_at"],
  "id": {
  default: "gen_random_uuid()",
  nullable: false,
  type: "uuid",
},
"name": {
  default: null,
  nullable: true,
  type: "text",
},
"description": {
  default: "''::text",
  nullable: false,
  type: "text",
},
"secret": {
  default: null,
  nullable: false,
  type: "text",
},
"key_id": {
  default: "(pgsodium.create_key()).id",
  nullable: true,
  type: "uuid",
},
"nonce": {
  default: "pgsodium.crypto_aead_det_noncegen()",
  nullable: true,
  type: "bytea",
},
"created_at": {
  default: "CURRENT_TIMESTAMP",
  nullable: false,
  type: "timestamptz",
},
"updated_at": {
  default: "CURRENT_TIMESTAMP",
  nullable: false,
  type: "timestamptz",
},
},
},
"pgsodium_masks": {
  $tables: [],
  
},
"pgsodium": {
  $tables: ["key"],
  "key": {
  $columns: ["id", "status", "created", "expires", "key_type", "key_id", "key_context", "name", "associated_data", "raw_key", "raw_key_nonce", "parent_key", "comment", "user_data"],
  "id": {
  default: "gen_random_uuid()",
  nullable: false,
  type: "uuid",
},
"status": {
  default: "'valid'::pgsodium.key_status",
  nullable: true,
  type: "key_status",
},
"created": {
  default: "CURRENT_TIMESTAMP",
  nullable: false,
  type: "timestamptz",
},
"expires": {
  default: null,
  nullable: true,
  type: "timestamptz",
},
"key_type": {
  default: null,
  nullable: true,
  type: "key_type",
},
"key_id": {
  default: "nextval('pgsodium.key_key_id_seq'::regclass)",
  nullable: true,
  type: "int8",
},
"key_context": {
  default: "'\x7067736f6469756d'::bytea",
  nullable: true,
  type: "bytea",
},
"name": {
  default: null,
  nullable: true,
  type: "text",
},
"associated_data": {
  default: "'associated'::text",
  nullable: true,
  type: "text",
},
"raw_key": {
  default: null,
  nullable: true,
  type: "bytea",
},
"raw_key_nonce": {
  default: null,
  nullable: true,
  type: "bytea",
},
"parent_key": {
  default: null,
  nullable: true,
  type: "uuid",
},
"comment": {
  default: null,
  nullable: true,
  type: "text",
},
"user_data": {
  default: null,
  nullable: true,
  type: "text",
},
},
},
"graphql": {
  $tables: [],
  
},
"graphql_public": {
  $tables: [],
  
},
"realtime": {
  $tables: [],
  
},
"auth": {
  $tables: ["audit_log_entries", "flow_state", "identities", "instances", "mfa_amr_claims", "mfa_challenges", "mfa_factors", "refresh_tokens", "saml_providers", "saml_relay_states", "schema_migrations", "sessions", "sso_domains", "sso_providers", "users"],
  "audit_log_entries": {
  $columns: ["instance_id", "id", "payload", "created_at", "ip_address"],
  "instance_id": {
  default: null,
  nullable: true,
  type: "uuid",
},
"id": {
  default: null,
  nullable: false,
  type: "uuid",
},
"payload": {
  default: null,
  nullable: true,
  type: "json",
},
"created_at": {
  default: null,
  nullable: true,
  type: "timestamptz",
},
"ip_address": {
  default: "''::character varying",
  nullable: false,
  type: "varchar",
},
},
"flow_state": {
  $columns: ["id", "user_id", "auth_code", "code_challenge_method", "code_challenge", "provider_type", "provider_access_token", "provider_refresh_token", "created_at", "updated_at", "authentication_method"],
  "id": {
  default: null,
  nullable: false,
  type: "uuid",
},
"user_id": {
  default: null,
  nullable: true,
  type: "uuid",
},
"auth_code": {
  default: null,
  nullable: false,
  type: "text",
},
"code_challenge_method": {
  default: null,
  nullable: false,
  type: "code_challenge_method",
},
"code_challenge": {
  default: null,
  nullable: false,
  type: "text",
},
"provider_type": {
  default: null,
  nullable: false,
  type: "text",
},
"provider_access_token": {
  default: null,
  nullable: true,
  type: "text",
},
"provider_refresh_token": {
  default: null,
  nullable: true,
  type: "text",
},
"created_at": {
  default: null,
  nullable: true,
  type: "timestamptz",
},
"updated_at": {
  default: null,
  nullable: true,
  type: "timestamptz",
},
"authentication_method": {
  default: null,
  nullable: false,
  type: "text",
},
},
"identities": {
  $columns: ["id", "user_id", "identity_data", "provider", "last_sign_in_at", "created_at", "updated_at", "email"],
  "id": {
  default: null,
  nullable: false,
  type: "text",
},
"user_id": {
  default: null,
  nullable: false,
  type: "uuid",
},
"identity_data": {
  default: null,
  nullable: false,
  type: "jsonb",
},
"provider": {
  default: null,
  nullable: false,
  type: "text",
},
"last_sign_in_at": {
  default: null,
  nullable: true,
  type: "timestamptz",
},
"created_at": {
  default: null,
  nullable: true,
  type: "timestamptz",
},
"updated_at": {
  default: null,
  nullable: true,
  type: "timestamptz",
},
"email": {
  default: null,
  nullable: true,
  type: "text",
},
},
"instances": {
  $columns: ["id", "uuid", "raw_base_config", "created_at", "updated_at"],
  "id": {
  default: null,
  nullable: false,
  type: "uuid",
},
"uuid": {
  default: null,
  nullable: true,
  type: "uuid",
},
"raw_base_config": {
  default: null,
  nullable: true,
  type: "text",
},
"created_at": {
  default: null,
  nullable: true,
  type: "timestamptz",
},
"updated_at": {
  default: null,
  nullable: true,
  type: "timestamptz",
},
},
"mfa_amr_claims": {
  $columns: ["session_id", "created_at", "updated_at", "authentication_method", "id"],
  "session_id": {
  default: null,
  nullable: false,
  type: "uuid",
},
"created_at": {
  default: null,
  nullable: false,
  type: "timestamptz",
},
"updated_at": {
  default: null,
  nullable: false,
  type: "timestamptz",
},
"authentication_method": {
  default: null,
  nullable: false,
  type: "text",
},
"id": {
  default: null,
  nullable: false,
  type: "uuid",
},
},
"mfa_challenges": {
  $columns: ["id", "factor_id", "created_at", "verified_at", "ip_address"],
  "id": {
  default: null,
  nullable: false,
  type: "uuid",
},
"factor_id": {
  default: null,
  nullable: false,
  type: "uuid",
},
"created_at": {
  default: null,
  nullable: false,
  type: "timestamptz",
},
"verified_at": {
  default: null,
  nullable: true,
  type: "timestamptz",
},
"ip_address": {
  default: null,
  nullable: false,
  type: "inet",
},
},
"mfa_factors": {
  $columns: ["id", "user_id", "friendly_name", "factor_type", "status", "created_at", "updated_at", "secret"],
  "id": {
  default: null,
  nullable: false,
  type: "uuid",
},
"user_id": {
  default: null,
  nullable: false,
  type: "uuid",
},
"friendly_name": {
  default: null,
  nullable: true,
  type: "text",
},
"factor_type": {
  default: null,
  nullable: false,
  type: "factor_type",
},
"status": {
  default: null,
  nullable: false,
  type: "factor_status",
},
"created_at": {
  default: null,
  nullable: false,
  type: "timestamptz",
},
"updated_at": {
  default: null,
  nullable: false,
  type: "timestamptz",
},
"secret": {
  default: null,
  nullable: true,
  type: "text",
},
},
"refresh_tokens": {
  $columns: ["instance_id", "id", "token", "user_id", "revoked", "created_at", "updated_at", "parent", "session_id"],
  "instance_id": {
  default: null,
  nullable: true,
  type: "uuid",
},
"id": {
  default: "nextval('auth.refresh_tokens_id_seq'::regclass)",
  nullable: false,
  type: "int8",
},
"token": {
  default: null,
  nullable: true,
  type: "varchar",
},
"user_id": {
  default: null,
  nullable: true,
  type: "varchar",
},
"revoked": {
  default: null,
  nullable: true,
  type: "bool",
},
"created_at": {
  default: null,
  nullable: true,
  type: "timestamptz",
},
"updated_at": {
  default: null,
  nullable: true,
  type: "timestamptz",
},
"parent": {
  default: null,
  nullable: true,
  type: "varchar",
},
"session_id": {
  default: null,
  nullable: true,
  type: "uuid",
},
},
"saml_providers": {
  $columns: ["id", "sso_provider_id", "entity_id", "metadata_xml", "metadata_url", "attribute_mapping", "created_at", "updated_at"],
  "id": {
  default: null,
  nullable: false,
  type: "uuid",
},
"sso_provider_id": {
  default: null,
  nullable: false,
  type: "uuid",
},
"entity_id": {
  default: null,
  nullable: false,
  type: "text",
},
"metadata_xml": {
  default: null,
  nullable: false,
  type: "text",
},
"metadata_url": {
  default: null,
  nullable: true,
  type: "text",
},
"attribute_mapping": {
  default: null,
  nullable: true,
  type: "jsonb",
},
"created_at": {
  default: null,
  nullable: true,
  type: "timestamptz",
},
"updated_at": {
  default: null,
  nullable: true,
  type: "timestamptz",
},
},
"saml_relay_states": {
  $columns: ["id", "sso_provider_id", "request_id", "for_email", "redirect_to", "from_ip_address", "created_at", "updated_at"],
  "id": {
  default: null,
  nullable: false,
  type: "uuid",
},
"sso_provider_id": {
  default: null,
  nullable: false,
  type: "uuid",
},
"request_id": {
  default: null,
  nullable: false,
  type: "text",
},
"for_email": {
  default: null,
  nullable: true,
  type: "text",
},
"redirect_to": {
  default: null,
  nullable: true,
  type: "text",
},
"from_ip_address": {
  default: null,
  nullable: true,
  type: "inet",
},
"created_at": {
  default: null,
  nullable: true,
  type: "timestamptz",
},
"updated_at": {
  default: null,
  nullable: true,
  type: "timestamptz",
},
},
"schema_migrations": {
  $columns: ["version"],
  "version": {
  default: null,
  nullable: false,
  type: "varchar",
},
},
"sessions": {
  $columns: ["id", "user_id", "created_at", "updated_at", "factor_id", "aal", "not_after"],
  "id": {
  default: null,
  nullable: false,
  type: "uuid",
},
"user_id": {
  default: null,
  nullable: false,
  type: "uuid",
},
"created_at": {
  default: null,
  nullable: true,
  type: "timestamptz",
},
"updated_at": {
  default: null,
  nullable: true,
  type: "timestamptz",
},
"factor_id": {
  default: null,
  nullable: true,
  type: "uuid",
},
"aal": {
  default: null,
  nullable: true,
  type: "aal_level",
},
"not_after": {
  default: null,
  nullable: true,
  type: "timestamptz",
},
},
"sso_domains": {
  $columns: ["id", "sso_provider_id", "domain", "created_at", "updated_at"],
  "id": {
  default: null,
  nullable: false,
  type: "uuid",
},
"sso_provider_id": {
  default: null,
  nullable: false,
  type: "uuid",
},
"domain": {
  default: null,
  nullable: false,
  type: "text",
},
"created_at": {
  default: null,
  nullable: true,
  type: "timestamptz",
},
"updated_at": {
  default: null,
  nullable: true,
  type: "timestamptz",
},
},
"sso_providers": {
  $columns: ["id", "resource_id", "created_at", "updated_at"],
  "id": {
  default: null,
  nullable: false,
  type: "uuid",
},
"resource_id": {
  default: null,
  nullable: true,
  type: "text",
},
"created_at": {
  default: null,
  nullable: true,
  type: "timestamptz",
},
"updated_at": {
  default: null,
  nullable: true,
  type: "timestamptz",
},
},
"users": {
  $columns: ["instance_id", "id", "aud", "role", "email", "encrypted_password", "email_confirmed_at", "invited_at", "confirmation_token", "confirmation_sent_at", "recovery_token", "recovery_sent_at", "email_change_token_new", "email_change", "email_change_sent_at", "last_sign_in_at", "raw_app_meta_data", "raw_user_meta_data", "is_super_admin", "created_at", "updated_at", "phone", "phone_confirmed_at", "phone_change", "phone_change_token", "phone_change_sent_at", "confirmed_at", "email_change_token_current", "email_change_confirm_status", "banned_until", "reauthentication_token", "reauthentication_sent_at", "is_sso_user", "deleted_at"],
  "instance_id": {
  default: null,
  nullable: true,
  type: "uuid",
},
"id": {
  default: null,
  nullable: false,
  type: "uuid",
},
"aud": {
  default: null,
  nullable: true,
  type: "varchar",
},
"role": {
  default: null,
  nullable: true,
  type: "varchar",
},
"email": {
  default: null,
  nullable: true,
  type: "varchar",
},
"encrypted_password": {
  default: null,
  nullable: true,
  type: "varchar",
},
"email_confirmed_at": {
  default: null,
  nullable: true,
  type: "timestamptz",
},
"invited_at": {
  default: null,
  nullable: true,
  type: "timestamptz",
},
"confirmation_token": {
  default: null,
  nullable: true,
  type: "varchar",
},
"confirmation_sent_at": {
  default: null,
  nullable: true,
  type: "timestamptz",
},
"recovery_token": {
  default: null,
  nullable: true,
  type: "varchar",
},
"recovery_sent_at": {
  default: null,
  nullable: true,
  type: "timestamptz",
},
"email_change_token_new": {
  default: null,
  nullable: true,
  type: "varchar",
},
"email_change": {
  default: null,
  nullable: true,
  type: "varchar",
},
"email_change_sent_at": {
  default: null,
  nullable: true,
  type: "timestamptz",
},
"last_sign_in_at": {
  default: null,
  nullable: true,
  type: "timestamptz",
},
"raw_app_meta_data": {
  default: null,
  nullable: true,
  type: "jsonb",
},
"raw_user_meta_data": {
  default: null,
  nullable: true,
  type: "jsonb",
},
"is_super_admin": {
  default: null,
  nullable: true,
  type: "bool",
},
"created_at": {
  default: null,
  nullable: true,
  type: "timestamptz",
},
"updated_at": {
  default: null,
  nullable: true,
  type: "timestamptz",
},
"phone": {
  default: "NULL::character varying",
  nullable: true,
  type: "text",
},
"phone_confirmed_at": {
  default: null,
  nullable: true,
  type: "timestamptz",
},
"phone_change": {
  default: "''::character varying",
  nullable: true,
  type: "text",
},
"phone_change_token": {
  default: "''::character varying",
  nullable: true,
  type: "varchar",
},
"phone_change_sent_at": {
  default: null,
  nullable: true,
  type: "timestamptz",
},
"confirmed_at": {
  default: null,
  nullable: true,
  type: "timestamptz",
},
"email_change_token_current": {
  default: "''::character varying",
  nullable: true,
  type: "varchar",
},
"email_change_confirm_status": {
  default: "0",
  nullable: true,
  type: "int2",
},
"banned_until": {
  default: null,
  nullable: true,
  type: "timestamptz",
},
"reauthentication_token": {
  default: "''::character varying",
  nullable: true,
  type: "varchar",
},
"reauthentication_sent_at": {
  default: null,
  nullable: true,
  type: "timestamptz",
},
"is_sso_user": {
  default: "false",
  nullable: false,
  type: "bool",
},
"deleted_at": {
  default: null,
  nullable: true,
  type: "timestamptz",
},
},
},
"storage": {
  $tables: ["buckets", "migrations", "objects"],
  "buckets": {
  $columns: ["id", "name", "owner", "created_at", "updated_at", "public", "avif_autodetection", "file_size_limit", "allowed_mime_types", "owner_id"],
  "id": {
  default: null,
  nullable: false,
  type: "text",
},
"name": {
  default: null,
  nullable: false,
  type: "text",
},
"owner": {
  default: null,
  nullable: true,
  type: "uuid",
},
"created_at": {
  default: "now()",
  nullable: true,
  type: "timestamptz",
},
"updated_at": {
  default: "now()",
  nullable: true,
  type: "timestamptz",
},
"public": {
  default: "false",
  nullable: true,
  type: "bool",
},
"avif_autodetection": {
  default: "false",
  nullable: true,
  type: "bool",
},
"file_size_limit": {
  default: null,
  nullable: true,
  type: "int8",
},
"allowed_mime_types": {
  default: null,
  nullable: true,
  type: "_text",
},
"owner_id": {
  default: null,
  nullable: true,
  type: "text",
},
},
"migrations": {
  $columns: ["id", "name", "hash", "executed_at"],
  "id": {
  default: null,
  nullable: false,
  type: "int4",
},
"name": {
  default: null,
  nullable: false,
  type: "varchar",
},
"hash": {
  default: null,
  nullable: false,
  type: "varchar",
},
"executed_at": {
  default: "CURRENT_TIMESTAMP",
  nullable: true,
  type: "timestamp",
},
},
"objects": {
  $columns: ["id", "bucket_id", "name", "owner", "created_at", "updated_at", "last_accessed_at", "metadata", "path_tokens", "version", "owner_id"],
  "id": {
  default: "uuid_generate_v4()",
  nullable: false,
  type: "uuid",
},
"bucket_id": {
  default: null,
  nullable: true,
  type: "text",
},
"name": {
  default: null,
  nullable: true,
  type: "text",
},
"owner": {
  default: null,
  nullable: true,
  type: "uuid",
},
"created_at": {
  default: "now()",
  nullable: true,
  type: "timestamptz",
},
"updated_at": {
  default: "now()",
  nullable: true,
  type: "timestamptz",
},
"last_accessed_at": {
  default: "now()",
  nullable: true,
  type: "timestamptz",
},
"metadata": {
  default: null,
  nullable: true,
  type: "jsonb",
},
"path_tokens": {
  default: null,
  nullable: true,
  type: "_text",
},
"version": {
  default: null,
  nullable: true,
  type: "text",
},
"owner_id": {
  default: null,
  nullable: true,
  type: "text",
},
},
},
}

type Enum_pgsodium_key_status = 'expired' | 'invalid' | 'valid' | 'default'
type Enum_net_request_status = 'ERROR' | 'SUCCESS' | 'PENDING'
type Enum_auth_factor_status = 'verified' | 'unverified'
type Enum_auth_factor_type = 'webauthn' | 'totp'
type Enum_auth_code_challenge_method = 'plain' | 's256'
type Enum_pgsodium_key_type = 'stream_xchacha20' | 'secretstream' | 'secretbox' | 'kdf' | 'generichash' | 'shorthash' | 'auth' | 'hmacsha256' | 'hmacsha512' | 'aead-det' | 'aead-ietf'
type Enum_auth_aal_level = 'aal3' | 'aal2' | 'aal1'

interface Table_net_http_response {
  "id": number
  "status_code": number
  "content_type": string
  "headers": Json
  "content": string
  "timed_out": boolean
  "error_msg": string
  "created": string
}
interface Table_public_alarm_feed_type {
  "type": string
  "description": string
}
interface Table_public_alarm_feeds {
  "created_at": string
  "headings": string
  "content": string
  "id": number
  "users": number
  "type": string
  "is_read": boolean
  "alarm_reward_history": number
}
interface Table_public_alarm_reward_history {
  "id": number
  "alarm_reward_info": number
  "created_at": string
  "users": number
  "is_receive": boolean
  "ingredients": number
}
interface Table_public_alarm_reward_info {
  "id": number
  "type": string
  "has_unique_marker": boolean
}
interface Table_public_alarm_reward_type {
  "name": string
  "description": string
}
interface Table_auth_audit_log_entries {
  "instance_id": string
  "id": string
  "payload": Json
  "created_at": string
  "ip_address": string
}
interface Table_storage_buckets {
  "id": string
  "name": string
  "owner": string
  "created_at": string
  "updated_at": string
  "public": boolean
  "avif_autodetection": boolean
  "file_size_limit": number
  "allowed_mime_types": NestedArray<string>
  "owner_id": string
}
interface Table_auth_flow_state {
  "id": string
  "user_id": string
  "auth_code": string
  "code_challenge_method": Enum_auth_code_challenge_method
  "code_challenge": string
  "provider_type": string
  "provider_access_token": string
  "provider_refresh_token": string
  "created_at": string
  "updated_at": string
  "authentication_method": string
}
interface Table_supabase_functions_hooks {
  "id": number
  "hook_table_id": number
  "hook_name": string
  "created_at": string
  "request_id": number
}
interface Table_net_http_request_queue {
  "id": number
  "method": string
  "url": string
  "headers": Json
  "body": string
  "timeout_milliseconds": number
}
interface Table_auth_identities {
  "id": string
  "user_id": string
  "identity_data": Json
  "provider": string
  "last_sign_in_at": string
  "created_at": string
  "updated_at": string
  "email": string
}
interface Table_public_ingredient_image {
  "image_url": string
  "name": string
}
interface Table_public_ingredient_type {
  "name": string
  "description": string
}
interface Table_public_ingredients {
  "id": number
  "name": string
  "reward_ticket": number
  "distance": number
  "type": string
  "image_url": string
}
interface Table_auth_instances {
  "id": string
  "uuid": string
  "raw_base_config": string
  "created_at": string
  "updated_at": string
}
interface Table_pgsodium_key {
  "id": string
  "status": Enum_pgsodium_key_status
  "created": string
  "expires": string
  "key_type": Enum_pgsodium_key_type
  "key_id": number
  "key_context": string
  "name": string
  "associated_data": string
  "raw_key": string
  "raw_key_nonce": string
  "parent_key": string
  "comment": string
  "user_data": string
}
interface Table_public_markers {
  "id": number
  "ingredients": number
  "longitude": number
  "last_obtain_user": number
  "latitude": number
  "hit_count": number
  "is_reward": boolean
}
interface Table_auth_mfa_amr_claims {
  "session_id": string
  "created_at": string
  "updated_at": string
  "authentication_method": string
  "id": string
}
interface Table_auth_mfa_challenges {
  "id": string
  "factor_id": string
  "created_at": string
  "verified_at": string
  "ip_address": string
}
interface Table_auth_mfa_factors {
  "id": string
  "user_id": string
  "friendly_name": string
  "factor_type": Enum_auth_factor_type
  "status": Enum_auth_factor_status
  "created_at": string
  "updated_at": string
  "secret": string
}
interface Table_storage_migrations {
  "id": number
  "name": string
  "hash": string
  "executed_at": string
}
interface Table_supabase_functions_migrations {
  "version": string
  "inserted_at": string
}
interface Table_public_mission_clear_conditions {
  "id": number
  "missions": number
  "require_count": number
  "ingredients": number
  "markers": number
}
interface Table_public_mission_clear_user {
  "id": number
  "created_at": string
  "missions": number
  "users": number
  "is_receive": boolean
}
interface Table_public_mission_reward {
  "id": number
  "total_count": number
  "remain_count": number
  "reward_image": string
  "created_at": string
  "reward_name": string
}
interface Table_public_mission_reward_type {
  "name": string
  "description": string
}
interface Table_public_mission_type {
  "name": string
  "description": string
}
interface Table_public_missions {
  "id": number
  "title": string
  "content": string
  "is_active": boolean
  "mission_type": string
  "mission_reward": number
}
interface Table_storage_objects {
  "id": string
  "bucket_id": string
  "name": string
  "owner": string
  "created_at": string
  "updated_at": string
  "last_accessed_at": string
  "metadata": Json
  "path_tokens": NestedArray<string>
  "version": string
  "owner_id": string
}
interface Table_public_obtain_histories {
  "id": number
  "created_at": string
  "location_name": string
  "ingredient": number
  "user": number
  "marker_id": string
  "ingredient_name": string
  "nickname": string
  "is_reward": boolean
}
interface Table_public_push_alarm {
  "created_at": string
  "headings": string
  "content": string
  "id": number
  "landing_route": string
  "search_text": string
}
interface Table_auth_refresh_tokens {
  "instance_id": string
  "id": number
  "token": string
  "user_id": string
  "revoked": boolean
  "created_at": string
  "updated_at": string
  "parent": string
  "session_id": string
}
interface Table_auth_saml_providers {
  "id": string
  "sso_provider_id": string
  "entity_id": string
  "metadata_xml": string
  "metadata_url": string
  "attribute_mapping": Json
  "created_at": string
  "updated_at": string
}
interface Table_auth_saml_relay_states {
  "id": string
  "sso_provider_id": string
  "request_id": string
  "for_email": string
  "redirect_to": string
  "from_ip_address": string
  "created_at": string
  "updated_at": string
}
interface Table_auth_schema_migrations {
  "version": string
}
interface Table_supabase_migrations_schema_migrations {
  "version": string
  "statements": NestedArray<string>
  "name": string
}
interface Table_vault_secrets {
  "id": string
  "name": string
  "description": string
  "secret": string
  "key_id": string
  "nonce": string
  "created_at": string
  "updated_at": string
}
interface Table_auth_sessions {
  "id": string
  "user_id": string
  "created_at": string
  "updated_at": string
  "factor_id": string
  "aal": Enum_auth_aal_level
  "not_after": string
}
interface Table_auth_sso_domains {
  "id": string
  "sso_provider_id": string
  "domain": string
  "created_at": string
  "updated_at": string
}
interface Table_auth_sso_providers {
  "id": string
  "resource_id": string
  "created_at": string
  "updated_at": string
}
interface Table_public_terms {
  "id": number
  "index": number
  "is_require": boolean
  "title": string
  "content": string
}
interface Table_auth_users {
  "instance_id": string
  "id": string
  "aud": string
  "role": string
  "email": string
  "encrypted_password": string
  "email_confirmed_at": string
  "invited_at": string
  "confirmation_token": string
  "confirmation_sent_at": string
  "recovery_token": string
  "recovery_sent_at": string
  "email_change_token_new": string
  "email_change": string
  "email_change_sent_at": string
  "last_sign_in_at": string
  "raw_app_meta_data": Json
  "raw_user_meta_data": Json
  "is_super_admin": boolean
  "created_at": string
  "updated_at": string
  "phone": string
  "phone_confirmed_at": string
  "phone_change": string
  "phone_change_token": string
  "phone_change_sent_at": string
  "confirmed_at": string
  "email_change_token_current": string
  "email_change_confirm_status": number
  "banned_until": string
  "reauthentication_token": string
  "reauthentication_sent_at": string
  "is_sso_user": boolean
  "deleted_at": string
}
interface Table_public_users {
  "id": number
  "phone": string
  "nickname": string
  "ticket": number
  "profileImage": string
  "marker_obtain_count": number
  "level": number
}
interface Table_extensions_wrappers_fdw_stats {
  "fdw_name": string
  "create_times": number
  "rows_in": number
  "rows_out": number
  "bytes_in": number
  "bytes_out": number
  "metadata": Json
  "created_at": string
  "updated_at": string
}

interface Schema_public {
  "alarm_feed_type": false | ((ctx: { row: Table_public_alarm_feed_type, rowIndex: number }) => Partial<Table_public_alarm_feed_type>)
  "alarm_feeds": false | ((ctx: { row: Table_public_alarm_feeds, rowIndex: number }) => Partial<Table_public_alarm_feeds>)
  "alarm_reward_history": false | ((ctx: { row: Table_public_alarm_reward_history, rowIndex: number }) => Partial<Table_public_alarm_reward_history>)
  "alarm_reward_info": false | ((ctx: { row: Table_public_alarm_reward_info, rowIndex: number }) => Partial<Table_public_alarm_reward_info>)
  "alarm_reward_type": false | ((ctx: { row: Table_public_alarm_reward_type, rowIndex: number }) => Partial<Table_public_alarm_reward_type>)
  "ingredient_image": false | ((ctx: { row: Table_public_ingredient_image, rowIndex: number }) => Partial<Table_public_ingredient_image>)
  "ingredient_type": false | ((ctx: { row: Table_public_ingredient_type, rowIndex: number }) => Partial<Table_public_ingredient_type>)
  "ingredients": false | ((ctx: { row: Table_public_ingredients, rowIndex: number }) => Partial<Table_public_ingredients>)
  "markers": false | ((ctx: { row: Table_public_markers, rowIndex: number }) => Partial<Table_public_markers>)
  "mission_clear_conditions": false | ((ctx: { row: Table_public_mission_clear_conditions, rowIndex: number }) => Partial<Table_public_mission_clear_conditions>)
  "mission_clear_user": false | ((ctx: { row: Table_public_mission_clear_user, rowIndex: number }) => Partial<Table_public_mission_clear_user>)
  "mission_reward": false | ((ctx: { row: Table_public_mission_reward, rowIndex: number }) => Partial<Table_public_mission_reward>)
  "mission_reward_type": false | ((ctx: { row: Table_public_mission_reward_type, rowIndex: number }) => Partial<Table_public_mission_reward_type>)
  "mission_type": false | ((ctx: { row: Table_public_mission_type, rowIndex: number }) => Partial<Table_public_mission_type>)
  "missions": false | ((ctx: { row: Table_public_missions, rowIndex: number }) => Partial<Table_public_missions>)
  "obtain_histories": false | ((ctx: { row: Table_public_obtain_histories, rowIndex: number }) => Partial<Table_public_obtain_histories>)
  "push_alarm": false | ((ctx: { row: Table_public_push_alarm, rowIndex: number }) => Partial<Table_public_push_alarm>)
  "terms": false | ((ctx: { row: Table_public_terms, rowIndex: number }) => Partial<Table_public_terms>)
  "users": false | ((ctx: { row: Table_public_users, rowIndex: number }) => Partial<Table_public_users>)
}
interface Schema_supabase_migrations {
  "schema_migrations": false | ((ctx: { row: Table_supabase_migrations_schema_migrations, rowIndex: number }) => Partial<Table_supabase_migrations_schema_migrations>)
}
interface Schema_supabase_functions {
  "hooks": false | ((ctx: { row: Table_supabase_functions_hooks, rowIndex: number }) => Partial<Table_supabase_functions_hooks>)
  "migrations": false | ((ctx: { row: Table_supabase_functions_migrations, rowIndex: number }) => Partial<Table_supabase_functions_migrations>)
}
interface Schema_extensions {
  "wrappers_fdw_stats": false | ((ctx: { row: Table_extensions_wrappers_fdw_stats, rowIndex: number }) => Partial<Table_extensions_wrappers_fdw_stats>)
}
interface Schema_net {
  "_http_response": false | ((ctx: { row: Table_net_http_response, rowIndex: number }) => Partial<Table_net_http_response>)
  "http_request_queue": false | ((ctx: { row: Table_net_http_request_queue, rowIndex: number }) => Partial<Table_net_http_request_queue>)
}
interface Schema_vault {
  "secrets": false | ((ctx: { row: Table_vault_secrets, rowIndex: number }) => Partial<Table_vault_secrets>)
}
interface Schema_pgsodium_masks {

}
interface Schema_pgsodium {
  "key": false | ((ctx: { row: Table_pgsodium_key, rowIndex: number }) => Partial<Table_pgsodium_key>)
}
interface Schema_graphql {

}
interface Schema_graphql_public {

}
interface Schema_realtime {

}
interface Schema_auth {
  "audit_log_entries": false | ((ctx: { row: Table_auth_audit_log_entries, rowIndex: number }) => Partial<Table_auth_audit_log_entries>)
  "flow_state": false | ((ctx: { row: Table_auth_flow_state, rowIndex: number }) => Partial<Table_auth_flow_state>)
  "identities": false | ((ctx: { row: Table_auth_identities, rowIndex: number }) => Partial<Table_auth_identities>)
  "instances": false | ((ctx: { row: Table_auth_instances, rowIndex: number }) => Partial<Table_auth_instances>)
  "mfa_amr_claims": false | ((ctx: { row: Table_auth_mfa_amr_claims, rowIndex: number }) => Partial<Table_auth_mfa_amr_claims>)
  "mfa_challenges": false | ((ctx: { row: Table_auth_mfa_challenges, rowIndex: number }) => Partial<Table_auth_mfa_challenges>)
  "mfa_factors": false | ((ctx: { row: Table_auth_mfa_factors, rowIndex: number }) => Partial<Table_auth_mfa_factors>)
  "refresh_tokens": false | ((ctx: { row: Table_auth_refresh_tokens, rowIndex: number }) => Partial<Table_auth_refresh_tokens>)
  "saml_providers": false | ((ctx: { row: Table_auth_saml_providers, rowIndex: number }) => Partial<Table_auth_saml_providers>)
  "saml_relay_states": false | ((ctx: { row: Table_auth_saml_relay_states, rowIndex: number }) => Partial<Table_auth_saml_relay_states>)
  "schema_migrations": false | ((ctx: { row: Table_auth_schema_migrations, rowIndex: number }) => Partial<Table_auth_schema_migrations>)
  "sessions": false | ((ctx: { row: Table_auth_sessions, rowIndex: number }) => Partial<Table_auth_sessions>)
  "sso_domains": false | ((ctx: { row: Table_auth_sso_domains, rowIndex: number }) => Partial<Table_auth_sso_domains>)
  "sso_providers": false | ((ctx: { row: Table_auth_sso_providers, rowIndex: number }) => Partial<Table_auth_sso_providers>)
  "users": false | ((ctx: { row: Table_auth_users, rowIndex: number }) => Partial<Table_auth_users>)
}
interface Schema_storage {
  "buckets": false | ((ctx: { row: Table_storage_buckets, rowIndex: number }) => Partial<Table_storage_buckets>)
  "migrations": false | ((ctx: { row: Table_storage_migrations, rowIndex: number }) => Partial<Table_storage_migrations>)
  "objects": false | ((ctx: { row: Table_storage_objects, rowIndex: number }) => Partial<Table_storage_objects>)
}

export interface Database {
  "public": Partial<Schema_public>
  "supabase_migrations": Partial<Schema_supabase_migrations>
  "supabase_functions": Partial<Schema_supabase_functions>
  "extensions": Partial<Schema_extensions>
  "net": Partial<Schema_net>
  "vault": Partial<Schema_vault>
  "pgsodium_masks": Partial<Schema_pgsodium_masks>
  "pgsodium": Partial<Schema_pgsodium>
  "graphql": Partial<Schema_graphql>
  "graphql_public": Partial<Schema_graphql_public>
  "realtime": Partial<Schema_realtime>
  "auth": Partial<Schema_auth>
  "storage": Partial<Schema_storage>
}

export type TransformContext = {
  structure: Structure;
}

export interface TransformOptions {
  mode?: 'auto' | 'strict' | 'unsafe'
  parseJson?: boolean
}

export type TransformConfig = { $options?: TransformOptions } & Partial<Database>

export type Transform = (ctx: TransformContext) => (TransformConfig | Promise<TransformConfig>)
