create table "public"."mission_clear_user_histories" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "missions" bigint not null,
    "users" bigint not null
);


alter table "public"."mission_clear_user_histories" enable row level security;

alter table "public"."missions" alter column "kr_note" set not null;

alter table "public"."users" add column "push_token" text not null default ''::text;

CREATE UNIQUE INDEX mission_clear_user_histories_pkey ON public.mission_clear_user_histories USING btree (id);

alter table "public"."mission_clear_user_histories" add constraint "mission_clear_user_histories_pkey" PRIMARY KEY using index "mission_clear_user_histories_pkey";

alter table "public"."mission_clear_user_histories" add constraint "mission_clear_user_histories_missions_fkey" FOREIGN KEY (missions) REFERENCES missions(id) ON UPDATE CASCADE ON DELETE RESTRICT not valid;

alter table "public"."mission_clear_user_histories" validate constraint "mission_clear_user_histories_missions_fkey";

alter table "public"."mission_clear_user_histories" add constraint "mission_clear_user_histories_users_fkey" FOREIGN KEY (users) REFERENCES users(id) ON UPDATE CASCADE ON DELETE SET NULL not valid;

alter table "public"."mission_clear_user_histories" validate constraint "mission_clear_user_histories_users_fkey";

create policy "Enable insert for authenticated users only"
on "public"."mission_clear_user_histories"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable read access for all users"
on "public"."mission_clear_user_histories"
as permissive
for select
to authenticated
using (true);



